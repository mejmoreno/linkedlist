#include <iostream>
#include <string>
using namespace std;

struct Player {
    string nickname;
    int age;
    double score1;
    double score2;
};

struct Node {
    Player player;
    Node* next;
};

Node* head = nullptr;

void addRecord(const Player& player) {
    Node* newNode = new Node;
    newNode->player = player;
    newNode->next = head;
    head = newNode;
}

void viewRecords() {
    Node* current = head;
    while (current != nullptr) {
        cout << "Nickname: " << current->player.nickname << endl;
        cout << "Age: " << current->player.age << endl;
        cout << "Score 1: " << current->player.score1 << endl;
        cout << "Score 2: " << current->player.score2 << endl;
        cout << "----------------------------------" << endl;
        current = current->next;
    }
}

void computeAverage() {
    Node* current = head;
    while (current != nullptr) {
        double average = (current->player.score1 + current->player.score2) / 2.0;
        cout << "Nickname: " << current->player.nickname << endl;
        cout << "Average Score: " << average << endl;
        cout << "----------------------------------" << endl;
        current = current->next;
    }
}

void showMaxAverage() {
    Node* current = head;
    double maxAverage = -1; // Initialize to a non-valid value
    while (current != nullptr) {
        double average = (current->player.score1 + current->player.score2) / 2.0;
        if (average > maxAverage) {
            maxAverage = average;
        }
        current = current->next;
    }
    // Now, iterate again to display players with the max average
    current = head;
    while (current != nullptr) {
        double average = (current->player.score1 + current->player.score2) / 2.0;
        if (average == maxAverage) {
            cout << "Nickname: " << current->player.nickname << endl;
            cout << "Average Score: " << average << endl;
            cout << "----------------------------------" << endl;
        }
        current = current->next;
    }
}

void showMinAverage() {
    Node* current = head;
    double minAverage = 999999; // Initialize to a large value
    while (current != nullptr) {
        double average = (current->player.score1 + current->player.score2) / 2.0;
        if (average < minAverage) {
            minAverage = average;
        }
        current = current->next;
    }
    // Now, iterate again to display players with the min average
    current = head;
    while (current != nullptr) {
        double average = (current->player.score1 + current->player.score2) / 2.0;
        if (average == minAverage) {
            cout << "Nickname: " << current->player.nickname << endl;
            cout << "Average Score: " << average << endl;
            cout << "----------------------------------" << endl;
        }
        current = current->next;
    }
}

int main() {
    Player player1 = { "Player1", 20, 90.5, 85.5 };
    Player player2 = { "Player2", 22, 88.0, 92.5 };
    Player player3 = { "Player3", 21, 85.5, 87.0 };

    addRecord(player1);
    addRecord(player2);
    addRecord(player3);

    cout << "Viewing all records:" << endl;
    viewRecords();
    cout << endl;

    cout << "Computing average scores:" << endl;
    computeAverage();
    cout << endl;

    cout << "Player(s) with highest average score:" << endl;
    showMaxAverage();
    cout << endl;

    cout << "Player(s) with lowest average score:" << endl;
    showMinAverage();

    return 0;
}
